[project]
name = "swa-bert"
dynamic = ["version"]
description = "Swahili sentiment analysis with BERT model"
readme = "README.md"
requires-python = ">=3.12"
license = "ELv2"
keywords = ["ML", "NLP", "BERT", "Swahili", "Sentiment Analysis", "Machine Learning", "Natural Language Processing"]
authors = [
  { name = "Andrew Kariuki", email = "andrew.o.kariuki@gmail.com" },
]
classifiers = [
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
  "itsdangerous==2.2.0",
  "pydantic==2.7.3",
  "python-multipart==0.0.9",
  "pydantic-settings==2.3.1",
]

[project.scripts]
swa-bert = "swa_bert.cli.__main__:app"

[project.urls]
Documentation = "https://github.com/andrewkariuki/swa-bert#readme"
Issues = "https://github.com/andrewkariuki/swa-bert/issues"
Source = "https://github.com/andrewkariuki/swa-bert"

[tool.hatch]

[tool.hatch.build]
include = [
  "/swa_bert/**/*.py",
  "/swa_bert/py.typed",
]
artifacts = []

[tool.hatch.version]
source = "regex_commit"
commit_extra_args = ["-e"]
path = "swa_bert/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
installer = "uv"
python = "3.12"
dependencies = [
  "asgi-lifespan",
  "beautifulsoup4",
  "coverage[toml]",
  "gevent",
  "httpx",
  "libcst",
  "mypy",
  "pytest",
  "pytest-cov",
  "pytest-asyncio==0.21.1",
  "pytest-mock",
  "pytest-xdist",
  "respx",
  "ruff",
  "types-python-slugify",
  "types-pytz",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args}"
test-cov-xml = "pytest --cov swa_bert/ --cov-report=xml --exitfirst"

lint = [
  "ruff format .",
  "ruff check --fix .",
  "mypy swa_bert/",
]
lint-check = [
  "ruff format --check .",
  "ruff check .",
  "mypy swa_bert/",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:swa_bert tests}"

[tool.coverage.run]
source_pkgs = ["swa_bert", "tests"]
concurrency = ["thread", "gevent"]
branch = true
parallel = true
omit = [
  "swa_bert/__init__.py",
  "swa_bert/alembic/*"
]

[tool.coverage.paths]
swa_bert = ["swa_bert", "*/swa-bert/swa_bert"]
tests = ["tests", "*/swa-bert/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
extend-select = ["I", "TRY", "UP"]
ignore = ["E501"]
per-file-ignores = { "conftest.py" = ["E731"], "tests/*" = ["TRY"], "swa_bert/repositories/*" = ["E711", "E712"], "swa_bert/alembic/*" = ["F401"]}

[build-system]
requires = ["hatchling", "hatch-regex-commit"]
build-backend = "hatchling.build"


# "aiomysql ==0.2.0",
#   "aiosqlite==0.20.0",
#   "alembic==1.13.1",
#   "apscheduler==3.10.4",
#   "argon2-cffi==23.1.0",
#   "asgi-babel==0.9.3",
#   "asyncpg==0.29.0",
#   "dramatiq[redis]==1.16.0",
#   "email-validator==2.1.1",
#   "fastapi==0.111.0",
#   "furl==2.1.3",
#   "httpx-oauth==0.13.2",
#   "itsdangerous==2.1.2",
#   "Jinja2==3.1.3",
#   "jwcrypto==1.5.6",
#   "loguru==0.7.2",
#   "phonenumbers>=8.12.48,<8.14",
#   "posthog>=3.0.1,<4",
#   "postmarker==1.0",

#   "pwdlib[argon2,bcrypt]==0.2.0",
#   "psycopg2==2.9.9",
#   "pycountry>=23,<24",
#   "python-slugify==8.0.4",
#   "pytz==2024.1",
#   "rich==13.7.1",
#   "sqlalchemy[mypy] ==2.0.29",
#   "sqlalchemy-utils ==0.41.2",
#   "typer==0.10.0",
#   "uvicorn[standard]==0.29.0",
#   "WTForms==3.1.2",
#   "zxcvbn-rs-py==0.1.1",
